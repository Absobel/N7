(* This file is generated by Why3's Coq driver *)
(* Beware! Only edit allowed sections below    *)
Require Import BuiltIn.
Require BuiltIn.
Require int.Int.

(* Why3 assumption *)
Inductive ref (a:Type) :=
  | mk_ref : a -> ref a.
Axiom ref_WhyType : forall (a:Type) {a_WT:WhyType a}, WhyType (ref a).
Existing Instance ref_WhyType.
Arguments mk_ref {a}.

(* Why3 assumption *)
Definition contents {a:Type} {a_WT:WhyType a} (v:ref a) : a :=
  match v with
  | mk_ref x => x
  end.

Parameter pgcd: Z -> Z -> Z.

Axiom XXX :
  forall (a:Z) (b:Z), (b < a)%Z -> ((pgcd a b) = (pgcd (a - b)%Z b)).

Axiom XXX2 : forall (a:Z) (b:Z), ((pgcd a b) = (pgcd b a)).

Axiom XXX3 : forall (a:Z), ((pgcd a a) = a).

(* Why3 goal *)
Theorem VC_pgcd_euclide :
  forall (a:Z) (b:Z), ((0%Z < a)%Z /\ (0%Z < b)%Z) ->
  ((0%Z < a)%Z /\ (0%Z < b)%Z) /\
  forall (bp:Z) (ap:Z),
  (((pgcd ap bp) = (pgcd a b)) /\ ((0%Z < ap)%Z /\ (0%Z < bp)%Z)) ->
  (~ (ap = bp) ->
   ((ap <= bp)%Z -> forall (bp1:Z), (bp1 = (bp - ap)%Z) ->
    ((0%Z <= (bp + ap)%Z)%Z /\ ((bp1 + ap)%Z < (bp + ap)%Z)%Z) /\
    (((pgcd ap bp1) = (pgcd a b)) /\ ((0%Z < ap)%Z /\ (0%Z < bp1)%Z))) /\
   (~ (ap <= bp)%Z -> forall (ap1:Z), (ap1 = (ap - bp)%Z) ->
    ((0%Z <= (bp + ap)%Z)%Z /\ ((bp + ap1)%Z < (bp + ap)%Z)%Z) /\
    (((pgcd ap1 bp) = (pgcd a b)) /\ ((0%Z < ap1)%Z /\ (0%Z < bp)%Z)))) /\
  ((ap = bp) -> (ap = (pgcd a b))).
Proof.
intros a b (h1,h2).

Qed.

