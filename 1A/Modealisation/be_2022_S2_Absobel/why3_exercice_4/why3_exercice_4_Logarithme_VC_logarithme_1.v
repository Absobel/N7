(* This file is generated by Why3's Coq driver *)
(* Beware! Only edit allowed sections below    *)
Require Import BuiltIn.
Require BuiltIn.
Require int.Int.
Require int.Power.

(* Why3 assumption *)
Inductive ref (a:Type) :=
  | mk_ref : a -> ref a.
Axiom ref_WhyType : forall (a:Type) {a_WT:WhyType a}, WhyType (ref a).
Existing Instance ref_WhyType.
Arguments mk_ref {a}.

(* Why3 assumption *)
Definition contents {a:Type} {a_WT:WhyType a} (v:ref a) : a :=
  match v with
  | mk_ref x => x
  end.

(* Why3 goal *)
Theorem VC_logarithme :
  forall (n:Z), (0%Z < n)%Z -> forall (v:Z) (r:Z),
  ((v <= n)%Z -> forall (v1:Z), (v1 = (2%Z * v)%Z) -> forall (r1:Z),
   ~ (r1 = (r + 1%Z)%Z)) /\
  (~ (v <= n)%Z -> forall (r1:Z), (r1 = (r - 1%Z)%Z) ->
   ((int.Power.power 2%Z r1) <= n)%Z /\
   (n < (int.Power.power 2%Z (r1 + 1%Z)%Z))%Z).
(* Why3 intros n h1 v r. *)
Proof.
intros n h1 v r.

Qed.

