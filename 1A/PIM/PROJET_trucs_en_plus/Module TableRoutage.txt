TYPE T_Donnee EST ENREGISTREMENT
    Masque : T_AdresseIP
    Interface : Chaine_de_caracteres
FIN ENREGISTREMENT

----------------------------

-- Initialise la table de routage avec les valeur dans le fichier Fichier_Table.
--
-- Paramètres :
--   Fichier_Table : le nom du fichier contenant les valeurs de la table de routage.
--   Table : la table de routage à initialiser.

R0 : Initialiser la table de routage avec le fichier Fichier_Table

R1 : Comment initialiser la table de routage avec le fichier Fichier_Table ?
    Initialiser(Table)       -- Utilise la fonction Initialiser du module LCA
    REPETER
        Adresse <- TransformerAdresseIP(Fichier_Table)
        Masque <- TransformerAdresseIP(Fichier_Table)
        Destination <- Lire_Ligne(Fichier_Table)
        Ligne_Table <- (Masque, Destination)
        Ajouter_Fin(Table, Adresse, Ligne_Table)
    JUSQU'A Fin_Fichier(Fichier_Table)
    EXCEPTION
        QUAND End_Error => Ecrire("Blancs en trop à la fin du fichier")

----------------------------

-- procedure préliminaire

-- Affiche une ligne de la table de routage (format XXX.XXX.XXX.XXX XXX.XXX.XXX.XXX Destination)
--
-- Paramètres :
--   Cle : la clé de la ligne
--   Valeur : la valeur de la ligne

R0 : Afficher une ligne de la table de routage

R1 : Comment afficher une ligne de la table de routage ?
    AfficherAdresseIP(Cle)
    AfficherAdresseIP(Donnee.Masque)
    Ecrire(Donnee.Interface)
    Nouvelle_Ligne()



-- Afficher la table de routage dans le terminal avec le numéro de la ligne d'appel de la commande.
--
-- Paramètres :
--  Table : la table de routage à afficher.
--  Numero_Ligne : le numéro de la ligne d'appel de la commande.

R0 : Afficher la table de routage

R1 : Comment afficher la table de routage ?
    Ecrire("table : (ligne ")
    Ecrire(Numero_Ligne)
    Ecrire(")")
    Nouvelle_Ligne()
    Afficher_Table_Ligne(Table)

----------------------------

-- procédure préliminaire

-- Fonction qui compare une adresse masquée par la Donnée avec la clé masquée par la donnée
--
-- Paramètres :
--  Cle : la clé de la ligne
--  Donnée : la donnée de la ligne

R0 : Trouver la destination associée à une adresse IP

R1 : Comment trouver la destination associée à une adresse IP ?
    Adresse_Masquee := Adresse and Donnee.Masque;
    SI Adresse_Masquee = Cle and Donnee.Masque >= Masque ALORS
        Masque := Donnee.Masque
        Destination := Donnee.Interface
    FIN SI

-- Compare une adresse IP à la table et renvoie l'interface associée (masque le plus grand possible)
--
-- Paramètres :
--   Table : la table de routage à utiliser.
--   Adresse : l'adresse IP à comparer.
--   Destination : la destination associée à l'adresse IP.
--   Masque : le masque associé à l'adresse IP.

R0 : Trouver la destination associée à une adresse IP

R1 : Comment trouver la destination associée à une adresse IP ?
    Masque := 0
    Destination <- "Erreur Table"
    Parcourir_Table(Table)

----------------------------

-- Vide la table de routage et la détruit.
--
-- Paramètres :
--  Table : la table de routage à vider.

R0 : Vider la table de routage

R1 : Comment vider la table de routage ?
    Vider(Table)       -- Utilise la fonction Vider du module LCA