/**
 * generated by Xtext 2.32.0
 */
package org.xtext.example.mydsl.tAB.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.example.mydsl.tAB.Algorithme;
import org.xtext.example.mydsl.tAB.Documentation;
import org.xtext.example.mydsl.tAB.Entree;
import org.xtext.example.mydsl.tAB.Ressource;
import org.xtext.example.mydsl.tAB.Sortie;
import org.xtext.example.mydsl.tAB.TABPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Algorithme</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.tAB.impl.AlgorithmeImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.tAB.impl.AlgorithmeImpl#getEntrees <em>Entrees</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.tAB.impl.AlgorithmeImpl#getSorties <em>Sorties</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.tAB.impl.AlgorithmeImpl#getDocumentation <em>Documentation</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.tAB.impl.AlgorithmeImpl#getRessource <em>Ressource</em>}</li>
 * </ul>
 *
 * @generated
 */
public class AlgorithmeImpl extends MinimalEObjectImpl.Container implements Algorithme
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getEntrees() <em>Entrees</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEntrees()
   * @generated
   * @ordered
   */
  protected EList<Entree> entrees;

  /**
   * The cached value of the '{@link #getSorties() <em>Sorties</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSorties()
   * @generated
   * @ordered
   */
  protected EList<Sortie> sorties;

  /**
   * The cached value of the '{@link #getDocumentation() <em>Documentation</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDocumentation()
   * @generated
   * @ordered
   */
  protected EList<Documentation> documentation;

  /**
   * The cached value of the '{@link #getRessource() <em>Ressource</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRessource()
   * @generated
   * @ordered
   */
  protected EList<Ressource> ressource;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected AlgorithmeImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return TABPackage.Literals.ALGORITHME;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TABPackage.ALGORITHME__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Entree> getEntrees()
  {
    if (entrees == null)
    {
      entrees = new EObjectContainmentEList<Entree>(Entree.class, this, TABPackage.ALGORITHME__ENTREES);
    }
    return entrees;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Sortie> getSorties()
  {
    if (sorties == null)
    {
      sorties = new EObjectContainmentEList<Sortie>(Sortie.class, this, TABPackage.ALGORITHME__SORTIES);
    }
    return sorties;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Documentation> getDocumentation()
  {
    if (documentation == null)
    {
      documentation = new EObjectContainmentEList<Documentation>(Documentation.class, this, TABPackage.ALGORITHME__DOCUMENTATION);
    }
    return documentation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Ressource> getRessource()
  {
    if (ressource == null)
    {
      ressource = new EObjectContainmentEList<Ressource>(Ressource.class, this, TABPackage.ALGORITHME__RESSOURCE);
    }
    return ressource;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case TABPackage.ALGORITHME__ENTREES:
        return ((InternalEList<?>)getEntrees()).basicRemove(otherEnd, msgs);
      case TABPackage.ALGORITHME__SORTIES:
        return ((InternalEList<?>)getSorties()).basicRemove(otherEnd, msgs);
      case TABPackage.ALGORITHME__DOCUMENTATION:
        return ((InternalEList<?>)getDocumentation()).basicRemove(otherEnd, msgs);
      case TABPackage.ALGORITHME__RESSOURCE:
        return ((InternalEList<?>)getRessource()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case TABPackage.ALGORITHME__NAME:
        return getName();
      case TABPackage.ALGORITHME__ENTREES:
        return getEntrees();
      case TABPackage.ALGORITHME__SORTIES:
        return getSorties();
      case TABPackage.ALGORITHME__DOCUMENTATION:
        return getDocumentation();
      case TABPackage.ALGORITHME__RESSOURCE:
        return getRessource();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case TABPackage.ALGORITHME__NAME:
        setName((String)newValue);
        return;
      case TABPackage.ALGORITHME__ENTREES:
        getEntrees().clear();
        getEntrees().addAll((Collection<? extends Entree>)newValue);
        return;
      case TABPackage.ALGORITHME__SORTIES:
        getSorties().clear();
        getSorties().addAll((Collection<? extends Sortie>)newValue);
        return;
      case TABPackage.ALGORITHME__DOCUMENTATION:
        getDocumentation().clear();
        getDocumentation().addAll((Collection<? extends Documentation>)newValue);
        return;
      case TABPackage.ALGORITHME__RESSOURCE:
        getRessource().clear();
        getRessource().addAll((Collection<? extends Ressource>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case TABPackage.ALGORITHME__NAME:
        setName(NAME_EDEFAULT);
        return;
      case TABPackage.ALGORITHME__ENTREES:
        getEntrees().clear();
        return;
      case TABPackage.ALGORITHME__SORTIES:
        getSorties().clear();
        return;
      case TABPackage.ALGORITHME__DOCUMENTATION:
        getDocumentation().clear();
        return;
      case TABPackage.ALGORITHME__RESSOURCE:
        getRessource().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case TABPackage.ALGORITHME__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case TABPackage.ALGORITHME__ENTREES:
        return entrees != null && !entrees.isEmpty();
      case TABPackage.ALGORITHME__SORTIES:
        return sorties != null && !sorties.isEmpty();
      case TABPackage.ALGORITHME__DOCUMENTATION:
        return documentation != null && !documentation.isEmpty();
      case TABPackage.ALGORITHME__RESSOURCE:
        return ressource != null && !ressource.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(')');
    return result.toString();
  }

} //AlgorithmeImpl
