/*
 * generated by Xtext 2.32.0
 */
grammar InternalTAB;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.services.TABGrammarAccess;

}
@parser::members {
	private TABGrammarAccess grammarAccess;

	public void setGrammarAccess(TABGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleTableur
entryRuleTableur
:
{ before(grammarAccess.getTableurRule()); }
	 ruleTableur
{ after(grammarAccess.getTableurRule()); } 
	 EOF 
;

// Rule Tableur
ruleTableur 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTableurAccess().getGroup()); }
		(rule__Tableur__Group__0)
		{ after(grammarAccess.getTableurAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleColonne
entryRuleColonne
:
{ before(grammarAccess.getColonneRule()); }
	 ruleColonne
{ after(grammarAccess.getColonneRule()); } 
	 EOF 
;

// Rule Colonne
ruleColonne 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getColonneAccess().getAlternatives()); }
		(rule__Colonne__Alternatives)
		{ after(grammarAccess.getColonneAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperateurUnaire
entryRuleOperateurUnaire
:
{ before(grammarAccess.getOperateurUnaireRule()); }
	 ruleOperateurUnaire
{ after(grammarAccess.getOperateurUnaireRule()); } 
	 EOF 
;

// Rule OperateurUnaire
ruleOperateurUnaire 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperateurUnaireAccess().getGroup()); }
		(rule__OperateurUnaire__Group__0)
		{ after(grammarAccess.getOperateurUnaireAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperateurBinaire
entryRuleOperateurBinaire
:
{ before(grammarAccess.getOperateurBinaireRule()); }
	 ruleOperateurBinaire
{ after(grammarAccess.getOperateurBinaireRule()); } 
	 EOF 
;

// Rule OperateurBinaire
ruleOperateurBinaire 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperateurBinaireAccess().getGroup()); }
		(rule__OperateurBinaire__Group__0)
		{ after(grammarAccess.getOperateurBinaireAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTable
entryRuleTable
:
{ before(grammarAccess.getTableRule()); }
	 ruleTable
{ after(grammarAccess.getTableRule()); } 
	 EOF 
;

// Rule Table
ruleTable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTableAccess().getGroup()); }
		(rule__Table__Group__0)
		{ after(grammarAccess.getTableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleColonneInput
entryRuleColonneInput
:
{ before(grammarAccess.getColonneInputRule()); }
	 ruleColonneInput
{ after(grammarAccess.getColonneInputRule()); } 
	 EOF 
;

// Rule ColonneInput
ruleColonneInput 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getColonneInputAccess().getGroup()); }
		(rule__ColonneInput__Group__0)
		{ after(grammarAccess.getColonneInputAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleColonneOutput
entryRuleColonneOutput
:
{ before(grammarAccess.getColonneOutputRule()); }
	 ruleColonneOutput
{ after(grammarAccess.getColonneOutputRule()); } 
	 EOF 
;

// Rule ColonneOutput
ruleColonneOutput 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getColonneOutputAccess().getAlternatives()); }
		(rule__ColonneOutput__Alternatives)
		{ after(grammarAccess.getColonneOutputAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCatalogue
entryRuleCatalogue
:
{ before(grammarAccess.getCatalogueRule()); }
	 ruleCatalogue
{ after(grammarAccess.getCatalogueRule()); } 
	 EOF 
;

// Rule Catalogue
ruleCatalogue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCatalogueAccess().getGroup()); }
		(rule__Catalogue__Group__0)
		{ after(grammarAccess.getCatalogueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAlgorithme
entryRuleAlgorithme
:
{ before(grammarAccess.getAlgorithmeRule()); }
	 ruleAlgorithme
{ after(grammarAccess.getAlgorithmeRule()); } 
	 EOF 
;

// Rule Algorithme
ruleAlgorithme 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAlgorithmeAccess().getGroup()); }
		(rule__Algorithme__Group__0)
		{ after(grammarAccess.getAlgorithmeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEntree
entryRuleEntree
:
{ before(grammarAccess.getEntreeRule()); }
	 ruleEntree
{ after(grammarAccess.getEntreeRule()); } 
	 EOF 
;

// Rule Entree
ruleEntree 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEntreeAccess().getGroup()); }
		(rule__Entree__Group__0)
		{ after(grammarAccess.getEntreeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSortie
entryRuleSortie
:
{ before(grammarAccess.getSortieRule()); }
	 ruleSortie
{ after(grammarAccess.getSortieRule()); } 
	 EOF 
;

// Rule Sortie
ruleSortie 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSortieAccess().getGroup()); }
		(rule__Sortie__Group__0)
		{ after(grammarAccess.getSortieAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParametre
entryRuleParametre
:
{ before(grammarAccess.getParametreRule()); }
	 ruleParametre
{ after(grammarAccess.getParametreRule()); } 
	 EOF 
;

// Rule Parametre
ruleParametre 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParametreAccess().getGroup()); }
		(rule__Parametre__Group__0)
		{ after(grammarAccess.getParametreAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDocumentation
entryRuleDocumentation
:
{ before(grammarAccess.getDocumentationRule()); }
	 ruleDocumentation
{ after(grammarAccess.getDocumentationRule()); } 
	 EOF 
;

// Rule Documentation
ruleDocumentation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDocumentationAccess().getGroup()); }
		(rule__Documentation__Group__0)
		{ after(grammarAccess.getDocumentationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRessource
entryRuleRessource
:
{ before(grammarAccess.getRessourceRule()); }
	 ruleRessource
{ after(grammarAccess.getRessourceRule()); } 
	 EOF 
;

// Rule Ressource
ruleRessource 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRessourceAccess().getGroup()); }
		(rule__Ressource__Group__0)
		{ after(grammarAccess.getRessourceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleScript
entryRuleScript
:
{ before(grammarAccess.getScriptRule()); }
	 ruleScript
{ after(grammarAccess.getScriptRule()); } 
	 EOF 
;

// Rule Script
ruleScript 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getScriptAccess().getGroup()); }
		(rule__Script__Group__0)
		{ after(grammarAccess.getScriptAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEntreeScript
entryRuleEntreeScript
:
{ before(grammarAccess.getEntreeScriptRule()); }
	 ruleEntreeScript
{ after(grammarAccess.getEntreeScriptRule()); } 
	 EOF 
;

// Rule EntreeScript
ruleEntreeScript 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEntreeScriptAccess().getGroup()); }
		(rule__EntreeScript__Group__0)
		{ after(grammarAccess.getEntreeScriptAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSortieScript
entryRuleSortieScript
:
{ before(grammarAccess.getSortieScriptRule()); }
	 ruleSortieScript
{ after(grammarAccess.getSortieScriptRule()); } 
	 EOF 
;

// Rule SortieScript
ruleSortieScript 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSortieScriptAccess().getGroup()); }
		(rule__SortieScript__Group__0)
		{ after(grammarAccess.getSortieScriptAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperationScript
entryRuleOperationScript
:
{ before(grammarAccess.getOperationScriptRule()); }
	 ruleOperationScript
{ after(grammarAccess.getOperationScriptRule()); } 
	 EOF 
;

// Rule OperationScript
ruleOperationScript 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperationScriptAccess().getAlternatives()); }
		(rule__OperationScript__Alternatives)
		{ after(grammarAccess.getOperationScriptAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperationUnaireScript
entryRuleOperationUnaireScript
:
{ before(grammarAccess.getOperationUnaireScriptRule()); }
	 ruleOperationUnaireScript
{ after(grammarAccess.getOperationUnaireScriptRule()); } 
	 EOF 
;

// Rule OperationUnaireScript
ruleOperationUnaireScript 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperationUnaireScriptAccess().getGroup()); }
		(rule__OperationUnaireScript__Group__0)
		{ after(grammarAccess.getOperationUnaireScriptAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperationBinaireScript
entryRuleOperationBinaireScript
:
{ before(grammarAccess.getOperationBinaireScriptRule()); }
	 ruleOperationBinaireScript
{ after(grammarAccess.getOperationBinaireScriptRule()); } 
	 EOF 
;

// Rule OperationBinaireScript
ruleOperationBinaireScript 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperationBinaireScriptAccess().getGroup()); }
		(rule__OperationBinaireScript__Group__0)
		{ after(grammarAccess.getOperationBinaireScriptAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperand
entryRuleOperand
:
{ before(grammarAccess.getOperandRule()); }
	 ruleOperand
{ after(grammarAccess.getOperandRule()); } 
	 EOF 
;

// Rule Operand
ruleOperand 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperandAccess().getAlternatives()); }
		(rule__Operand__Alternatives)
		{ after(grammarAccess.getOperandAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCalcul
entryRuleCalcul
:
{ before(grammarAccess.getCalculRule()); }
	 ruleCalcul
{ after(grammarAccess.getCalculRule()); } 
	 EOF 
;

// Rule Calcul
ruleCalcul 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCalculAccess().getGroup()); }
		(rule__Calcul__Group__0)
		{ after(grammarAccess.getCalculAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule OperationUnaireType
ruleOperationUnaireType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationUnaireTypeAccess().getOpposeEnumLiteralDeclaration()); }
		('Oppose')
		{ after(grammarAccess.getOperationUnaireTypeAccess().getOpposeEnumLiteralDeclaration()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule OperationBinaireType
ruleOperationBinaireType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationBinaireTypeAccess().getAlternatives()); }
		(rule__OperationBinaireType__Alternatives)
		{ after(grammarAccess.getOperationBinaireTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule TypePrimitifPython
ruleTypePrimitifPython
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypePrimitifPythonAccess().getAlternatives()); }
		(rule__TypePrimitifPython__Alternatives)
		{ after(grammarAccess.getTypePrimitifPythonAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule OperateurBinaireType
ruleOperateurBinaireType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperateurBinaireTypeAccess().getAlternatives()); }
		(rule__OperateurBinaireType__Alternatives)
		{ after(grammarAccess.getOperateurBinaireTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule OperateurUnaireType
ruleOperateurUnaireType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperateurUnaireTypeAccess().getAlternatives()); }
		(rule__OperateurUnaireType__Alternatives)
		{ after(grammarAccess.getOperateurUnaireTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Colonne__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColonneAccess().getColonneInputParserRuleCall_0()); }
		ruleColonneInput
		{ after(grammarAccess.getColonneAccess().getColonneInputParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getColonneAccess().getColonneOutputParserRuleCall_1()); }
		ruleColonneOutput
		{ after(grammarAccess.getColonneAccess().getColonneOutputParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColonneOutput__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColonneOutputAccess().getGroup_0()); }
		(rule__ColonneOutput__Group_0__0)
		{ after(grammarAccess.getColonneOutputAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getColonneOutputAccess().getGroup_1()); }
		(rule__ColonneOutput__Group_1__0)
		{ after(grammarAccess.getColonneOutputAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationScript__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationScriptAccess().getOperationUnaireScriptParserRuleCall_0()); }
		ruleOperationUnaireScript
		{ after(grammarAccess.getOperationScriptAccess().getOperationUnaireScriptParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getOperationScriptAccess().getOperationBinaireScriptParserRuleCall_1()); }
		ruleOperationBinaireScript
		{ after(grammarAccess.getOperationScriptAccess().getOperationBinaireScriptParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operand__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperandAccess().getGroup_0()); }
		(rule__Operand__Group_0__0)
		{ after(grammarAccess.getOperandAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getOperandAccess().getGroup_1()); }
		(rule__Operand__Group_1__0)
		{ after(grammarAccess.getOperandAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getOperandAccess().getOperationScriptParserRuleCall_2()); }
		ruleOperationScript
		{ after(grammarAccess.getOperandAccess().getOperationScriptParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationBinaireType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationBinaireTypeAccess().getAdditionEnumLiteralDeclaration_0()); }
		('Addition')
		{ after(grammarAccess.getOperationBinaireTypeAccess().getAdditionEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getOperationBinaireTypeAccess().getSoustractionEnumLiteralDeclaration_1()); }
		('Soustraction')
		{ after(grammarAccess.getOperationBinaireTypeAccess().getSoustractionEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getOperationBinaireTypeAccess().getMultiplicationEnumLiteralDeclaration_2()); }
		('Multiplication')
		{ after(grammarAccess.getOperationBinaireTypeAccess().getMultiplicationEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getOperationBinaireTypeAccess().getDivisionEnumLiteralDeclaration_3()); }
		('Division')
		{ after(grammarAccess.getOperationBinaireTypeAccess().getDivisionEnumLiteralDeclaration_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrimitifPython__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypePrimitifPythonAccess().getIntEnumLiteralDeclaration_0()); }
		('int')
		{ after(grammarAccess.getTypePrimitifPythonAccess().getIntEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypePrimitifPythonAccess().getFloatEnumLiteralDeclaration_1()); }
		('float')
		{ after(grammarAccess.getTypePrimitifPythonAccess().getFloatEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypePrimitifPythonAccess().getStrEnumLiteralDeclaration_2()); }
		('str')
		{ after(grammarAccess.getTypePrimitifPythonAccess().getStrEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getTypePrimitifPythonAccess().getBoolEnumLiteralDeclaration_3()); }
		('bool')
		{ after(grammarAccess.getTypePrimitifPythonAccess().getBoolEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getTypePrimitifPythonAccess().getListEnumLiteralDeclaration_4()); }
		('list')
		{ after(grammarAccess.getTypePrimitifPythonAccess().getListEnumLiteralDeclaration_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperateurBinaireType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperateurBinaireTypeAccess().getADDEnumLiteralDeclaration_0()); }
		('Add')
		{ after(grammarAccess.getOperateurBinaireTypeAccess().getADDEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getOperateurBinaireTypeAccess().getSUBEnumLiteralDeclaration_1()); }
		('Sub')
		{ after(grammarAccess.getOperateurBinaireTypeAccess().getSUBEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getOperateurBinaireTypeAccess().getTIMEnumLiteralDeclaration_2()); }
		('Tim')
		{ after(grammarAccess.getOperateurBinaireTypeAccess().getTIMEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getOperateurBinaireTypeAccess().getDIVEnumLiteralDeclaration_3()); }
		('Div')
		{ after(grammarAccess.getOperateurBinaireTypeAccess().getDIVEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getOperateurBinaireTypeAccess().getMINEnumLiteralDeclaration_4()); }
		('Min')
		{ after(grammarAccess.getOperateurBinaireTypeAccess().getMINEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getOperateurBinaireTypeAccess().getMAXEnumLiteralDeclaration_5()); }
		('Max')
		{ after(grammarAccess.getOperateurBinaireTypeAccess().getMAXEnumLiteralDeclaration_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperateurUnaireType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperateurUnaireTypeAccess().getOPPEnumLiteralDeclaration_0()); }
		('Opp')
		{ after(grammarAccess.getOperateurUnaireTypeAccess().getOPPEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getOperateurUnaireTypeAccess().getINVEnumLiteralDeclaration_1()); }
		('Inv')
		{ after(grammarAccess.getOperateurUnaireTypeAccess().getINVEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getOperateurUnaireTypeAccess().getCOSEnumLiteralDeclaration_2()); }
		('Cos')
		{ after(grammarAccess.getOperateurUnaireTypeAccess().getCOSEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getOperateurUnaireTypeAccess().getSINEnumLiteralDeclaration_3()); }
		('Sin')
		{ after(grammarAccess.getOperateurUnaireTypeAccess().getSINEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getOperateurUnaireTypeAccess().getSQREnumLiteralDeclaration_4()); }
		('Sqr')
		{ after(grammarAccess.getOperateurUnaireTypeAccess().getSQREnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getOperateurUnaireTypeAccess().getEXPEnumLiteralDeclaration_5()); }
		('Exp')
		{ after(grammarAccess.getOperateurUnaireTypeAccess().getEXPEnumLiteralDeclaration_5()); }
	)
	|
	(
		{ before(grammarAccess.getOperateurUnaireTypeAccess().getLOGEnumLiteralDeclaration_6()); }
		('Log')
		{ after(grammarAccess.getOperateurUnaireTypeAccess().getLOGEnumLiteralDeclaration_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tableur__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tableur__Group__0__Impl
	rule__Tableur__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Tableur__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableurAccess().getTableurKeyword_0()); }
	'Tableur'
	{ after(grammarAccess.getTableurAccess().getTableurKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tableur__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tableur__Group__1__Impl
	rule__Tableur__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Tableur__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableurAccess().getNameAssignment_1()); }
	(rule__Tableur__NameAssignment_1)
	{ after(grammarAccess.getTableurAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tableur__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tableur__Group__2__Impl
	rule__Tableur__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Tableur__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableurAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getTableurAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tableur__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tableur__Group__3__Impl
	rule__Tableur__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Tableur__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableurAccess().getTablesAssignment_3()); }
	(rule__Tableur__TablesAssignment_3)*
	{ after(grammarAccess.getTableurAccess().getTablesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tableur__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tableur__Group__4__Impl
	rule__Tableur__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Tableur__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableurAccess().getCatalogueAssignment_4()); }
	(rule__Tableur__CatalogueAssignment_4)*
	{ after(grammarAccess.getTableurAccess().getCatalogueAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tableur__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tableur__Group__5__Impl
	rule__Tableur__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Tableur__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableurAccess().getScriptAssignment_5()); }
	(rule__Tableur__ScriptAssignment_5)*
	{ after(grammarAccess.getTableurAccess().getScriptAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tableur__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tableur__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Tableur__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableurAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getTableurAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OperateurUnaire__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperateurUnaire__Group__0__Impl
	rule__OperateurUnaire__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperateurUnaire__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperateurUnaireAccess().getOperationKeyword_0()); }
	'Operation'
	{ after(grammarAccess.getOperateurUnaireAccess().getOperationKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperateurUnaire__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperateurUnaire__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperateurUnaire__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperateurUnaireAccess().getKindAssignment_1()); }
	(rule__OperateurUnaire__KindAssignment_1)
	{ after(grammarAccess.getOperateurUnaireAccess().getKindAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OperateurBinaire__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperateurBinaire__Group__0__Impl
	rule__OperateurBinaire__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperateurBinaire__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperateurBinaireAccess().getOperationKeyword_0()); }
	'Operation'
	{ after(grammarAccess.getOperateurBinaireAccess().getOperationKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperateurBinaire__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperateurBinaire__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperateurBinaire__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperateurBinaireAccess().getKindAssignment_1()); }
	(rule__OperateurBinaire__KindAssignment_1)
	{ after(grammarAccess.getOperateurBinaireAccess().getKindAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Table__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__0__Impl
	rule__Table__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getTableKeyword_0()); }
	'Table'
	{ after(grammarAccess.getTableAccess().getTableKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__1__Impl
	rule__Table__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getNameAssignment_1()); }
	(rule__Table__NameAssignment_1)
	{ after(grammarAccess.getTableAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__2__Impl
	rule__Table__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getTableAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__3__Impl
	rule__Table__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getColonnesAssignment_3()); }
	(rule__Table__ColonnesAssignment_3)*
	{ after(grammarAccess.getTableAccess().getColonnesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getTableAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ColonneInput__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColonneInput__Group__0__Impl
	rule__ColonneInput__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ColonneInput__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColonneInputAccess().getColonneInputKeyword_0()); }
	'ColonneInput'
	{ after(grammarAccess.getColonneInputAccess().getColonneInputKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColonneInput__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColonneInput__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ColonneInput__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColonneInputAccess().getNameAssignment_1()); }
	(rule__ColonneInput__NameAssignment_1)
	{ after(grammarAccess.getColonneInputAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ColonneOutput__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColonneOutput__Group_0__0__Impl
	rule__ColonneOutput__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ColonneOutput__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColonneOutputAccess().getColonneOutputKeyword_0_0()); }
	'ColonneOutput'
	{ after(grammarAccess.getColonneOutputAccess().getColonneOutputKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColonneOutput__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColonneOutput__Group_0__1__Impl
	rule__ColonneOutput__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ColonneOutput__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColonneOutputAccess().getNameAssignment_0_1()); }
	(rule__ColonneOutput__NameAssignment_0_1)
	{ after(grammarAccess.getColonneOutputAccess().getNameAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColonneOutput__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColonneOutput__Group_0__2__Impl
	rule__ColonneOutput__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ColonneOutput__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColonneOutputAccess().getLeftCurlyBracketKeyword_0_2()); }
	'{'
	{ after(grammarAccess.getColonneOutputAccess().getLeftCurlyBracketKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColonneOutput__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColonneOutput__Group_0__3__Impl
	rule__ColonneOutput__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ColonneOutput__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColonneOutputAccess().getOperationsAssignment_0_3()); }
	(rule__ColonneOutput__OperationsAssignment_0_3)
	{ after(grammarAccess.getColonneOutputAccess().getOperationsAssignment_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColonneOutput__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColonneOutput__Group_0__4__Impl
	rule__ColonneOutput__Group_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ColonneOutput__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColonneOutputAccess().getColonnesAssignment_0_4()); }
	(rule__ColonneOutput__ColonnesAssignment_0_4)
	{ after(grammarAccess.getColonneOutputAccess().getColonnesAssignment_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColonneOutput__Group_0__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColonneOutput__Group_0__5__Impl
	rule__ColonneOutput__Group_0__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ColonneOutput__Group_0__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColonneOutputAccess().getColonnesAssignment_0_5()); }
	(rule__ColonneOutput__ColonnesAssignment_0_5)
	{ after(grammarAccess.getColonneOutputAccess().getColonnesAssignment_0_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColonneOutput__Group_0__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColonneOutput__Group_0__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ColonneOutput__Group_0__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColonneOutputAccess().getRightCurlyBracketKeyword_0_6()); }
	'}'
	{ after(grammarAccess.getColonneOutputAccess().getRightCurlyBracketKeyword_0_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ColonneOutput__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColonneOutput__Group_1__0__Impl
	rule__ColonneOutput__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ColonneOutput__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColonneOutputAccess().getColonneOutputKeyword_1_0()); }
	'ColonneOutput'
	{ after(grammarAccess.getColonneOutputAccess().getColonneOutputKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColonneOutput__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColonneOutput__Group_1__1__Impl
	rule__ColonneOutput__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ColonneOutput__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColonneOutputAccess().getNameAssignment_1_1()); }
	(rule__ColonneOutput__NameAssignment_1_1)
	{ after(grammarAccess.getColonneOutputAccess().getNameAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColonneOutput__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColonneOutput__Group_1__2__Impl
	rule__ColonneOutput__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ColonneOutput__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColonneOutputAccess().getLeftCurlyBracketKeyword_1_2()); }
	'{'
	{ after(grammarAccess.getColonneOutputAccess().getLeftCurlyBracketKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColonneOutput__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColonneOutput__Group_1__3__Impl
	rule__ColonneOutput__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ColonneOutput__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColonneOutputAccess().getOperationsAssignment_1_3()); }
	(rule__ColonneOutput__OperationsAssignment_1_3)
	{ after(grammarAccess.getColonneOutputAccess().getOperationsAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColonneOutput__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColonneOutput__Group_1__4__Impl
	rule__ColonneOutput__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ColonneOutput__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColonneOutputAccess().getColonnesAssignment_1_4()); }
	(rule__ColonneOutput__ColonnesAssignment_1_4)
	{ after(grammarAccess.getColonneOutputAccess().getColonnesAssignment_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColonneOutput__Group_1__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColonneOutput__Group_1__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ColonneOutput__Group_1__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColonneOutputAccess().getRightCurlyBracketKeyword_1_5()); }
	'}'
	{ after(grammarAccess.getColonneOutputAccess().getRightCurlyBracketKeyword_1_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Catalogue__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Catalogue__Group__0__Impl
	rule__Catalogue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Catalogue__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCatalogueAccess().getCatalogueKeyword_0()); }
	'Catalogue'
	{ after(grammarAccess.getCatalogueAccess().getCatalogueKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Catalogue__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Catalogue__Group__1__Impl
	rule__Catalogue__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Catalogue__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCatalogueAccess().getNameAssignment_1()); }
	(rule__Catalogue__NameAssignment_1)
	{ after(grammarAccess.getCatalogueAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Catalogue__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Catalogue__Group__2__Impl
	rule__Catalogue__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Catalogue__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCatalogueAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getCatalogueAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Catalogue__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Catalogue__Group__3__Impl
	rule__Catalogue__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Catalogue__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCatalogueAccess().getAlgorithmesAssignment_3()); }
	(rule__Catalogue__AlgorithmesAssignment_3)*
	{ after(grammarAccess.getCatalogueAccess().getAlgorithmesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Catalogue__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Catalogue__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Catalogue__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCatalogueAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getCatalogueAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Algorithme__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Algorithme__Group__0__Impl
	rule__Algorithme__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithme__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlgorithmeAccess().getAlgorithmeKeyword_0()); }
	'Algorithme'
	{ after(grammarAccess.getAlgorithmeAccess().getAlgorithmeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithme__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Algorithme__Group__1__Impl
	rule__Algorithme__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithme__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlgorithmeAccess().getNameAssignment_1()); }
	(rule__Algorithme__NameAssignment_1)
	{ after(grammarAccess.getAlgorithmeAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithme__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Algorithme__Group__2__Impl
	rule__Algorithme__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithme__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlgorithmeAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getAlgorithmeAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithme__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Algorithme__Group__3__Impl
	rule__Algorithme__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithme__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlgorithmeAccess().getEntreesAssignment_3()); }
	(rule__Algorithme__EntreesAssignment_3)*
	{ after(grammarAccess.getAlgorithmeAccess().getEntreesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithme__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Algorithme__Group__4__Impl
	rule__Algorithme__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithme__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlgorithmeAccess().getSortiesAssignment_4()); }
	(rule__Algorithme__SortiesAssignment_4)*
	{ after(grammarAccess.getAlgorithmeAccess().getSortiesAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithme__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Algorithme__Group__5__Impl
	rule__Algorithme__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithme__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlgorithmeAccess().getDocumentationAssignment_5()); }
	(rule__Algorithme__DocumentationAssignment_5)*
	{ after(grammarAccess.getAlgorithmeAccess().getDocumentationAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithme__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Algorithme__Group__6__Impl
	rule__Algorithme__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithme__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlgorithmeAccess().getRessourceAssignment_6()); }
	(rule__Algorithme__RessourceAssignment_6)*
	{ after(grammarAccess.getAlgorithmeAccess().getRessourceAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithme__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Algorithme__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithme__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlgorithmeAccess().getRightCurlyBracketKeyword_7()); }
	'}'
	{ after(grammarAccess.getAlgorithmeAccess().getRightCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Entree__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entree__Group__0__Impl
	rule__Entree__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entree__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntreeAccess().getEntreesKeyword_0()); }
	'Entrees'
	{ after(grammarAccess.getEntreeAccess().getEntreesKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entree__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entree__Group__1__Impl
	rule__Entree__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Entree__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntreeAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getEntreeAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entree__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entree__Group__2__Impl
	rule__Entree__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Entree__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntreeAccess().getParametresAssignment_2()); }
	(rule__Entree__ParametresAssignment_2)*
	{ after(grammarAccess.getEntreeAccess().getParametresAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entree__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entree__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entree__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntreeAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getEntreeAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Sortie__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sortie__Group__0__Impl
	rule__Sortie__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sortie__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSortieAccess().getSortiesKeyword_0()); }
	'Sorties'
	{ after(grammarAccess.getSortieAccess().getSortiesKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sortie__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sortie__Group__1__Impl
	rule__Sortie__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Sortie__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSortieAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getSortieAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sortie__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sortie__Group__2__Impl
	rule__Sortie__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Sortie__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSortieAccess().getParametresAssignment_2()); }
	(rule__Sortie__ParametresAssignment_2)*
	{ after(grammarAccess.getSortieAccess().getParametresAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sortie__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sortie__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sortie__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSortieAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getSortieAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parametre__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parametre__Group__0__Impl
	rule__Parametre__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parametre__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametreAccess().getNameAssignment_0()); }
	(rule__Parametre__NameAssignment_0)
	{ after(grammarAccess.getParametreAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parametre__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parametre__Group__1__Impl
	rule__Parametre__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parametre__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametreAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getParametreAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parametre__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parametre__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parametre__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametreAccess().getTypeAssignment_2()); }
	(rule__Parametre__TypeAssignment_2)
	{ after(grammarAccess.getParametreAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Documentation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Documentation__Group__0__Impl
	rule__Documentation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Documentation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDocumentationAccess().getDocumentationKeyword_0()); }
	'Documentation'
	{ after(grammarAccess.getDocumentationAccess().getDocumentationKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Documentation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Documentation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Documentation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDocumentationAccess().getTexteAssignment_1()); }
	(rule__Documentation__TexteAssignment_1)
	{ after(grammarAccess.getDocumentationAccess().getTexteAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Ressource__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ressource__Group__0__Impl
	rule__Ressource__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ressource__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRessourceAccess().getRessourceKeyword_0()); }
	'Ressource'
	{ after(grammarAccess.getRessourceAccess().getRessourceKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ressource__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ressource__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ressource__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRessourceAccess().getCheminAssignment_1()); }
	(rule__Ressource__CheminAssignment_1)
	{ after(grammarAccess.getRessourceAccess().getCheminAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Script__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Script__Group__0__Impl
	rule__Script__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Script__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScriptAccess().getScriptKeyword_0()); }
	'Script'
	{ after(grammarAccess.getScriptAccess().getScriptKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Script__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Script__Group__1__Impl
	rule__Script__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Script__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScriptAccess().getNameAssignment_1()); }
	(rule__Script__NameAssignment_1)
	{ after(grammarAccess.getScriptAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Script__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Script__Group__2__Impl
	rule__Script__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Script__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScriptAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getScriptAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Script__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Script__Group__3__Impl
	rule__Script__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Script__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScriptAccess().getEntreesAssignment_3()); }
	(rule__Script__EntreesAssignment_3)
	{ after(grammarAccess.getScriptAccess().getEntreesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Script__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Script__Group__4__Impl
	rule__Script__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Script__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScriptAccess().getSortiesAssignment_4()); }
	(rule__Script__SortiesAssignment_4)
	{ after(grammarAccess.getScriptAccess().getSortiesAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Script__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Script__Group__5__Impl
	rule__Script__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Script__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScriptAccess().getCalculsAssignment_5()); }
	(rule__Script__CalculsAssignment_5)
	{ after(grammarAccess.getScriptAccess().getCalculsAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Script__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Script__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Script__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScriptAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getScriptAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EntreeScript__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EntreeScript__Group__0__Impl
	rule__EntreeScript__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EntreeScript__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntreeScriptAccess().getEntreesKeyword_0()); }
	'Entrees'
	{ after(grammarAccess.getEntreeScriptAccess().getEntreesKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EntreeScript__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EntreeScript__Group__1__Impl
	rule__EntreeScript__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EntreeScript__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntreeScriptAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getEntreeScriptAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EntreeScript__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EntreeScript__Group__2__Impl
	rule__EntreeScript__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EntreeScript__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntreeScriptAccess().getParametresAssignment_2()); }
	(rule__EntreeScript__ParametresAssignment_2)*
	{ after(grammarAccess.getEntreeScriptAccess().getParametresAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EntreeScript__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EntreeScript__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EntreeScript__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntreeScriptAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getEntreeScriptAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SortieScript__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SortieScript__Group__0__Impl
	rule__SortieScript__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SortieScript__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSortieScriptAccess().getSortiesKeyword_0()); }
	'Sorties'
	{ after(grammarAccess.getSortieScriptAccess().getSortiesKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SortieScript__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SortieScript__Group__1__Impl
	rule__SortieScript__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SortieScript__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSortieScriptAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getSortieScriptAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SortieScript__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SortieScript__Group__2__Impl
	rule__SortieScript__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SortieScript__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSortieScriptAccess().getParametresAssignment_2()); }
	(rule__SortieScript__ParametresAssignment_2)*
	{ after(grammarAccess.getSortieScriptAccess().getParametresAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SortieScript__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SortieScript__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SortieScript__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSortieScriptAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getSortieScriptAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OperationUnaireScript__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationUnaireScript__Group__0__Impl
	rule__OperationUnaireScript__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationUnaireScript__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationUnaireScriptAccess().getOperationAssignment_0()); }
	(rule__OperationUnaireScript__OperationAssignment_0)
	{ after(grammarAccess.getOperationUnaireScriptAccess().getOperationAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationUnaireScript__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationUnaireScript__Group__1__Impl
	rule__OperationUnaireScript__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationUnaireScript__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationUnaireScriptAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getOperationUnaireScriptAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationUnaireScript__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationUnaireScript__Group__2__Impl
	rule__OperationUnaireScript__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationUnaireScript__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationUnaireScriptAccess().getOperandsAssignment_2()); }
	(rule__OperationUnaireScript__OperandsAssignment_2)
	{ after(grammarAccess.getOperationUnaireScriptAccess().getOperandsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationUnaireScript__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationUnaireScript__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationUnaireScript__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationUnaireScriptAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getOperationUnaireScriptAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OperationBinaireScript__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationBinaireScript__Group__0__Impl
	rule__OperationBinaireScript__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationBinaireScript__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationBinaireScriptAccess().getOperationAssignment_0()); }
	(rule__OperationBinaireScript__OperationAssignment_0)
	{ after(grammarAccess.getOperationBinaireScriptAccess().getOperationAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationBinaireScript__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationBinaireScript__Group__1__Impl
	rule__OperationBinaireScript__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationBinaireScript__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationBinaireScriptAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getOperationBinaireScriptAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationBinaireScript__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationBinaireScript__Group__2__Impl
	rule__OperationBinaireScript__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationBinaireScript__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationBinaireScriptAccess().getOperandAssignment_2()); }
	(rule__OperationBinaireScript__OperandAssignment_2)
	{ after(grammarAccess.getOperationBinaireScriptAccess().getOperandAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationBinaireScript__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationBinaireScript__Group__3__Impl
	rule__OperationBinaireScript__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationBinaireScript__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationBinaireScriptAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getOperationBinaireScriptAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationBinaireScript__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationBinaireScript__Group__4__Impl
	rule__OperationBinaireScript__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationBinaireScript__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationBinaireScriptAccess().getOperandAssignment_4()); }
	(rule__OperationBinaireScript__OperandAssignment_4)
	{ after(grammarAccess.getOperationBinaireScriptAccess().getOperandAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationBinaireScript__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationBinaireScript__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationBinaireScript__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationBinaireScriptAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getOperationBinaireScriptAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Operand__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operand__Group_0__0__Impl
	rule__Operand__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Operand__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperandAccess().getOperandAction_0_0()); }
	()
	{ after(grammarAccess.getOperandAccess().getOperandAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operand__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operand__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Operand__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperandAccess().getIDTerminalRuleCall_0_1()); }
	RULE_ID
	{ after(grammarAccess.getOperandAccess().getIDTerminalRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Operand__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operand__Group_1__0__Impl
	rule__Operand__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Operand__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperandAccess().getOperandAction_1_0()); }
	()
	{ after(grammarAccess.getOperandAccess().getOperandAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operand__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operand__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Operand__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperandAccess().getINTTerminalRuleCall_1_1()); }
	RULE_INT
	{ after(grammarAccess.getOperandAccess().getINTTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Calcul__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Calcul__Group__0__Impl
	rule__Calcul__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Calcul__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCalculAccess().getCalculKeyword_0()); }
	'Calcul'
	{ after(grammarAccess.getCalculAccess().getCalculKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Calcul__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Calcul__Group__1__Impl
	rule__Calcul__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Calcul__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCalculAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getCalculAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Calcul__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Calcul__Group__2__Impl
	rule__Calcul__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Calcul__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCalculAccess().getOperationAssignment_2()); }
	(rule__Calcul__OperationAssignment_2)
	{ after(grammarAccess.getCalculAccess().getOperationAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Calcul__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Calcul__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Calcul__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCalculAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getCalculAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Tableur__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableurAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getTableurAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tableur__TablesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableurAccess().getTablesTableParserRuleCall_3_0()); }
		ruleTable
		{ after(grammarAccess.getTableurAccess().getTablesTableParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tableur__CatalogueAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableurAccess().getCatalogueCatalogueParserRuleCall_4_0()); }
		ruleCatalogue
		{ after(grammarAccess.getTableurAccess().getCatalogueCatalogueParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tableur__ScriptAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableurAccess().getScriptScriptParserRuleCall_5_0()); }
		ruleScript
		{ after(grammarAccess.getTableurAccess().getScriptScriptParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperateurUnaire__KindAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperateurUnaireAccess().getKindOperationUnaireTypeEnumRuleCall_1_0()); }
		ruleOperationUnaireType
		{ after(grammarAccess.getOperateurUnaireAccess().getKindOperationUnaireTypeEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperateurBinaire__KindAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperateurBinaireAccess().getKindOperationBinaireTypeEnumRuleCall_1_0()); }
		ruleOperationBinaireType
		{ after(grammarAccess.getOperateurBinaireAccess().getKindOperationBinaireTypeEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getTableAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__ColonnesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableAccess().getColonnesColonneParserRuleCall_3_0()); }
		ruleColonne
		{ after(grammarAccess.getTableAccess().getColonnesColonneParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColonneInput__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColonneInputAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getColonneInputAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColonneOutput__NameAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColonneOutputAccess().getNameIDTerminalRuleCall_0_1_0()); }
		RULE_ID
		{ after(grammarAccess.getColonneOutputAccess().getNameIDTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColonneOutput__OperationsAssignment_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColonneOutputAccess().getOperationsOperateurBinaireParserRuleCall_0_3_0()); }
		ruleOperateurBinaire
		{ after(grammarAccess.getColonneOutputAccess().getOperationsOperateurBinaireParserRuleCall_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColonneOutput__ColonnesAssignment_0_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColonneOutputAccess().getColonnesColonneCrossReference_0_4_0()); }
		(
			{ before(grammarAccess.getColonneOutputAccess().getColonnesColonneIDTerminalRuleCall_0_4_0_1()); }
			RULE_ID
			{ after(grammarAccess.getColonneOutputAccess().getColonnesColonneIDTerminalRuleCall_0_4_0_1()); }
		)
		{ after(grammarAccess.getColonneOutputAccess().getColonnesColonneCrossReference_0_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColonneOutput__ColonnesAssignment_0_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColonneOutputAccess().getColonnesColonneCrossReference_0_5_0()); }
		(
			{ before(grammarAccess.getColonneOutputAccess().getColonnesColonneIDTerminalRuleCall_0_5_0_1()); }
			RULE_ID
			{ after(grammarAccess.getColonneOutputAccess().getColonnesColonneIDTerminalRuleCall_0_5_0_1()); }
		)
		{ after(grammarAccess.getColonneOutputAccess().getColonnesColonneCrossReference_0_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColonneOutput__NameAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColonneOutputAccess().getNameIDTerminalRuleCall_1_1_0()); }
		RULE_ID
		{ after(grammarAccess.getColonneOutputAccess().getNameIDTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColonneOutput__OperationsAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColonneOutputAccess().getOperationsOperateurUnaireParserRuleCall_1_3_0()); }
		ruleOperateurUnaire
		{ after(grammarAccess.getColonneOutputAccess().getOperationsOperateurUnaireParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColonneOutput__ColonnesAssignment_1_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColonneOutputAccess().getColonnesColonneCrossReference_1_4_0()); }
		(
			{ before(grammarAccess.getColonneOutputAccess().getColonnesColonneIDTerminalRuleCall_1_4_0_1()); }
			RULE_ID
			{ after(grammarAccess.getColonneOutputAccess().getColonnesColonneIDTerminalRuleCall_1_4_0_1()); }
		)
		{ after(grammarAccess.getColonneOutputAccess().getColonnesColonneCrossReference_1_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Catalogue__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCatalogueAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getCatalogueAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Catalogue__AlgorithmesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCatalogueAccess().getAlgorithmesAlgorithmeParserRuleCall_3_0()); }
		ruleAlgorithme
		{ after(grammarAccess.getCatalogueAccess().getAlgorithmesAlgorithmeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithme__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAlgorithmeAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getAlgorithmeAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithme__EntreesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAlgorithmeAccess().getEntreesEntreeParserRuleCall_3_0()); }
		ruleEntree
		{ after(grammarAccess.getAlgorithmeAccess().getEntreesEntreeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithme__SortiesAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAlgorithmeAccess().getSortiesSortieParserRuleCall_4_0()); }
		ruleSortie
		{ after(grammarAccess.getAlgorithmeAccess().getSortiesSortieParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithme__DocumentationAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAlgorithmeAccess().getDocumentationDocumentationParserRuleCall_5_0()); }
		ruleDocumentation
		{ after(grammarAccess.getAlgorithmeAccess().getDocumentationDocumentationParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithme__RessourceAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAlgorithmeAccess().getRessourceRessourceParserRuleCall_6_0()); }
		ruleRessource
		{ after(grammarAccess.getAlgorithmeAccess().getRessourceRessourceParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entree__ParametresAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntreeAccess().getParametresParametreParserRuleCall_2_0()); }
		ruleParametre
		{ after(grammarAccess.getEntreeAccess().getParametresParametreParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sortie__ParametresAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSortieAccess().getParametresParametreParserRuleCall_2_0()); }
		ruleParametre
		{ after(grammarAccess.getSortieAccess().getParametresParametreParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parametre__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParametreAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getParametreAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parametre__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParametreAccess().getTypeTypePrimitifPythonEnumRuleCall_2_0()); }
		ruleTypePrimitifPython
		{ after(grammarAccess.getParametreAccess().getTypeTypePrimitifPythonEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Documentation__TexteAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDocumentationAccess().getTexteSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getDocumentationAccess().getTexteSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ressource__CheminAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRessourceAccess().getCheminSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getRessourceAccess().getCheminSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Script__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScriptAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getScriptAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Script__EntreesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScriptAccess().getEntreesEntreeScriptParserRuleCall_3_0()); }
		ruleEntreeScript
		{ after(grammarAccess.getScriptAccess().getEntreesEntreeScriptParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Script__SortiesAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScriptAccess().getSortiesSortieScriptParserRuleCall_4_0()); }
		ruleSortieScript
		{ after(grammarAccess.getScriptAccess().getSortiesSortieScriptParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Script__CalculsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScriptAccess().getCalculsCalculParserRuleCall_5_0()); }
		ruleCalcul
		{ after(grammarAccess.getScriptAccess().getCalculsCalculParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EntreeScript__ParametresAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntreeScriptAccess().getParametresParametreParserRuleCall_2_0()); }
		ruleParametre
		{ after(grammarAccess.getEntreeScriptAccess().getParametresParametreParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SortieScript__ParametresAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSortieScriptAccess().getParametresParametreParserRuleCall_2_0()); }
		ruleParametre
		{ after(grammarAccess.getSortieScriptAccess().getParametresParametreParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationUnaireScript__OperationAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationUnaireScriptAccess().getOperationOperateurUnaireTypeEnumRuleCall_0_0()); }
		ruleOperateurUnaireType
		{ after(grammarAccess.getOperationUnaireScriptAccess().getOperationOperateurUnaireTypeEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationUnaireScript__OperandsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationUnaireScriptAccess().getOperandsOperandParserRuleCall_2_0()); }
		ruleOperand
		{ after(grammarAccess.getOperationUnaireScriptAccess().getOperandsOperandParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationBinaireScript__OperationAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationBinaireScriptAccess().getOperationOperateurBinaireTypeEnumRuleCall_0_0()); }
		ruleOperateurBinaireType
		{ after(grammarAccess.getOperationBinaireScriptAccess().getOperationOperateurBinaireTypeEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationBinaireScript__OperandAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationBinaireScriptAccess().getOperandOperandParserRuleCall_2_0()); }
		ruleOperand
		{ after(grammarAccess.getOperationBinaireScriptAccess().getOperandOperandParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationBinaireScript__OperandAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationBinaireScriptAccess().getOperandOperandParserRuleCall_4_0()); }
		ruleOperand
		{ after(grammarAccess.getOperationBinaireScriptAccess().getOperandOperandParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Calcul__OperationAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCalculAccess().getOperationOperationScriptParserRuleCall_2_0()); }
		ruleOperationScript
		{ after(grammarAccess.getCalculAccess().getOperationOperationScriptParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
