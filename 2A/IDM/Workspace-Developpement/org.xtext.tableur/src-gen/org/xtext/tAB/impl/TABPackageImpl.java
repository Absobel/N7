/**
 * generated by Xtext 2.32.0
 */
package org.xtext.tAB.impl;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EEnum;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

import org.xtext.tAB.Algorithme;
import org.xtext.tAB.Calcul;
import org.xtext.tAB.Catalogue;
import org.xtext.tAB.Colonne;
import org.xtext.tAB.ColonneInput;
import org.xtext.tAB.ColonneOutput;
import org.xtext.tAB.Documentation;
import org.xtext.tAB.Entree;
import org.xtext.tAB.EntreeScript;
import org.xtext.tAB.Operand;
import org.xtext.tAB.OperateurBinaire;
import org.xtext.tAB.OperateurBinaireType;
import org.xtext.tAB.OperateurUnaire;
import org.xtext.tAB.OperateurUnaireType;
import org.xtext.tAB.Operation;
import org.xtext.tAB.OperationBinaireScript;
import org.xtext.tAB.OperationBinaireType;
import org.xtext.tAB.OperationScript;
import org.xtext.tAB.OperationUnaireScript;
import org.xtext.tAB.OperationUnaireType;
import org.xtext.tAB.Parametre;
import org.xtext.tAB.Ressource;
import org.xtext.tAB.Script;
import org.xtext.tAB.Sortie;
import org.xtext.tAB.SortieScript;
import org.xtext.tAB.TABFactory;
import org.xtext.tAB.TABPackage;
import org.xtext.tAB.Table;
import org.xtext.tAB.Tableur;
import org.xtext.tAB.TypePrimitifPython;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class TABPackageImpl extends EPackageImpl implements TABPackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass tableurEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass colonneEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass operationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass operateurUnaireEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass operateurBinaireEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass tableEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass colonneInputEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass colonneOutputEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass catalogueEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass algorithmeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass entreeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass sortieEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass parametreEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass documentationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass ressourceEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass scriptEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass entreeScriptEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass sortieScriptEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass operationScriptEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass operationUnaireScriptEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass operationBinaireScriptEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass operandEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass calculEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum operationUnaireTypeEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum operationBinaireTypeEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum typePrimitifPythonEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum operateurBinaireTypeEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum operateurUnaireTypeEEnum = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see org.xtext.tAB.TABPackage#eNS_URI
   * @see #init()
   * @generated
   */
  private TABPackageImpl()
  {
    super(eNS_URI, TABFactory.eINSTANCE);
  }
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   *
   * <p>This method is used to initialize {@link TABPackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static TABPackage init()
  {
    if (isInited) return (TABPackage)EPackage.Registry.INSTANCE.getEPackage(TABPackage.eNS_URI);

    // Obtain or create and register package
    Object registeredTABPackage = EPackage.Registry.INSTANCE.get(eNS_URI);
    TABPackageImpl theTABPackage = registeredTABPackage instanceof TABPackageImpl ? (TABPackageImpl)registeredTABPackage : new TABPackageImpl();

    isInited = true;

    // Create package meta-data objects
    theTABPackage.createPackageContents();

    // Initialize created meta-data
    theTABPackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theTABPackage.freeze();

    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(TABPackage.eNS_URI, theTABPackage);
    return theTABPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getTableur()
  {
    return tableurEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getTableur_Name()
  {
    return (EAttribute)tableurEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getTableur_Tables()
  {
    return (EReference)tableurEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getTableur_Catalogue()
  {
    return (EReference)tableurEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getTableur_Script()
  {
    return (EReference)tableurEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getColonne()
  {
    return colonneEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getColonne_Name()
  {
    return (EAttribute)colonneEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getOperation()
  {
    return operationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getOperateurUnaire()
  {
    return operateurUnaireEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getOperateurUnaire_Kind()
  {
    return (EAttribute)operateurUnaireEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getOperateurBinaire()
  {
    return operateurBinaireEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getOperateurBinaire_Kind()
  {
    return (EAttribute)operateurBinaireEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getTable()
  {
    return tableEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getTable_Name()
  {
    return (EAttribute)tableEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getTable_Colonnes()
  {
    return (EReference)tableEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getColonneInput()
  {
    return colonneInputEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getColonneOutput()
  {
    return colonneOutputEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getColonneOutput_Operations()
  {
    return (EReference)colonneOutputEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getColonneOutput_Colonnes()
  {
    return (EReference)colonneOutputEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getCatalogue()
  {
    return catalogueEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getCatalogue_Name()
  {
    return (EAttribute)catalogueEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getCatalogue_Algorithmes()
  {
    return (EReference)catalogueEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getAlgorithme()
  {
    return algorithmeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getAlgorithme_Name()
  {
    return (EAttribute)algorithmeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getAlgorithme_Entrees()
  {
    return (EReference)algorithmeEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getAlgorithme_Sorties()
  {
    return (EReference)algorithmeEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getAlgorithme_Documentation()
  {
    return (EReference)algorithmeEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getAlgorithme_Ressource()
  {
    return (EReference)algorithmeEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEntree()
  {
    return entreeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEntree_Parametres()
  {
    return (EReference)entreeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSortie()
  {
    return sortieEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSortie_Parametres()
  {
    return (EReference)sortieEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getParametre()
  {
    return parametreEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getParametre_Name()
  {
    return (EAttribute)parametreEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getParametre_Type()
  {
    return (EAttribute)parametreEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getDocumentation()
  {
    return documentationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDocumentation_Texte()
  {
    return (EAttribute)documentationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getRessource()
  {
    return ressourceEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRessource_Chemin()
  {
    return (EAttribute)ressourceEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getScript()
  {
    return scriptEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getScript_Name()
  {
    return (EAttribute)scriptEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getScript_Entrees()
  {
    return (EReference)scriptEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getScript_Sorties()
  {
    return (EReference)scriptEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getScript_Calculs()
  {
    return (EReference)scriptEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEntreeScript()
  {
    return entreeScriptEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEntreeScript_Parametres()
  {
    return (EReference)entreeScriptEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSortieScript()
  {
    return sortieScriptEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSortieScript_Parametres()
  {
    return (EReference)sortieScriptEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getOperationScript()
  {
    return operationScriptEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getOperationUnaireScript()
  {
    return operationUnaireScriptEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getOperationUnaireScript_Operation()
  {
    return (EAttribute)operationUnaireScriptEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getOperationUnaireScript_Operands()
  {
    return (EReference)operationUnaireScriptEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getOperationBinaireScript()
  {
    return operationBinaireScriptEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getOperationBinaireScript_Operation()
  {
    return (EAttribute)operationBinaireScriptEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getOperationBinaireScript_Operand()
  {
    return (EReference)operationBinaireScriptEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getOperand()
  {
    return operandEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getCalcul()
  {
    return calculEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getCalcul_Operation()
  {
    return (EReference)calculEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getOperationUnaireType()
  {
    return operationUnaireTypeEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getOperationBinaireType()
  {
    return operationBinaireTypeEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getTypePrimitifPython()
  {
    return typePrimitifPythonEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getOperateurBinaireType()
  {
    return operateurBinaireTypeEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getOperateurUnaireType()
  {
    return operateurUnaireTypeEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public TABFactory getTABFactory()
  {
    return (TABFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    tableurEClass = createEClass(TABLEUR);
    createEAttribute(tableurEClass, TABLEUR__NAME);
    createEReference(tableurEClass, TABLEUR__TABLES);
    createEReference(tableurEClass, TABLEUR__CATALOGUE);
    createEReference(tableurEClass, TABLEUR__SCRIPT);

    colonneEClass = createEClass(COLONNE);
    createEAttribute(colonneEClass, COLONNE__NAME);

    operationEClass = createEClass(OPERATION);

    operateurUnaireEClass = createEClass(OPERATEUR_UNAIRE);
    createEAttribute(operateurUnaireEClass, OPERATEUR_UNAIRE__KIND);

    operateurBinaireEClass = createEClass(OPERATEUR_BINAIRE);
    createEAttribute(operateurBinaireEClass, OPERATEUR_BINAIRE__KIND);

    tableEClass = createEClass(TABLE);
    createEAttribute(tableEClass, TABLE__NAME);
    createEReference(tableEClass, TABLE__COLONNES);

    colonneInputEClass = createEClass(COLONNE_INPUT);

    colonneOutputEClass = createEClass(COLONNE_OUTPUT);
    createEReference(colonneOutputEClass, COLONNE_OUTPUT__OPERATIONS);
    createEReference(colonneOutputEClass, COLONNE_OUTPUT__COLONNES);

    catalogueEClass = createEClass(CATALOGUE);
    createEAttribute(catalogueEClass, CATALOGUE__NAME);
    createEReference(catalogueEClass, CATALOGUE__ALGORITHMES);

    algorithmeEClass = createEClass(ALGORITHME);
    createEAttribute(algorithmeEClass, ALGORITHME__NAME);
    createEReference(algorithmeEClass, ALGORITHME__ENTREES);
    createEReference(algorithmeEClass, ALGORITHME__SORTIES);
    createEReference(algorithmeEClass, ALGORITHME__DOCUMENTATION);
    createEReference(algorithmeEClass, ALGORITHME__RESSOURCE);

    entreeEClass = createEClass(ENTREE);
    createEReference(entreeEClass, ENTREE__PARAMETRES);

    sortieEClass = createEClass(SORTIE);
    createEReference(sortieEClass, SORTIE__PARAMETRES);

    parametreEClass = createEClass(PARAMETRE);
    createEAttribute(parametreEClass, PARAMETRE__NAME);
    createEAttribute(parametreEClass, PARAMETRE__TYPE);

    documentationEClass = createEClass(DOCUMENTATION);
    createEAttribute(documentationEClass, DOCUMENTATION__TEXTE);

    ressourceEClass = createEClass(RESSOURCE);
    createEAttribute(ressourceEClass, RESSOURCE__CHEMIN);

    scriptEClass = createEClass(SCRIPT);
    createEAttribute(scriptEClass, SCRIPT__NAME);
    createEReference(scriptEClass, SCRIPT__ENTREES);
    createEReference(scriptEClass, SCRIPT__SORTIES);
    createEReference(scriptEClass, SCRIPT__CALCULS);

    entreeScriptEClass = createEClass(ENTREE_SCRIPT);
    createEReference(entreeScriptEClass, ENTREE_SCRIPT__PARAMETRES);

    sortieScriptEClass = createEClass(SORTIE_SCRIPT);
    createEReference(sortieScriptEClass, SORTIE_SCRIPT__PARAMETRES);

    operationScriptEClass = createEClass(OPERATION_SCRIPT);

    operationUnaireScriptEClass = createEClass(OPERATION_UNAIRE_SCRIPT);
    createEAttribute(operationUnaireScriptEClass, OPERATION_UNAIRE_SCRIPT__OPERATION);
    createEReference(operationUnaireScriptEClass, OPERATION_UNAIRE_SCRIPT__OPERANDS);

    operationBinaireScriptEClass = createEClass(OPERATION_BINAIRE_SCRIPT);
    createEAttribute(operationBinaireScriptEClass, OPERATION_BINAIRE_SCRIPT__OPERATION);
    createEReference(operationBinaireScriptEClass, OPERATION_BINAIRE_SCRIPT__OPERAND);

    operandEClass = createEClass(OPERAND);

    calculEClass = createEClass(CALCUL);
    createEReference(calculEClass, CALCUL__OPERATION);

    // Create enums
    operationUnaireTypeEEnum = createEEnum(OPERATION_UNAIRE_TYPE);
    operationBinaireTypeEEnum = createEEnum(OPERATION_BINAIRE_TYPE);
    typePrimitifPythonEEnum = createEEnum(TYPE_PRIMITIF_PYTHON);
    operateurBinaireTypeEEnum = createEEnum(OPERATEUR_BINAIRE_TYPE);
    operateurUnaireTypeEEnum = createEEnum(OPERATEUR_UNAIRE_TYPE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes
    operateurUnaireEClass.getESuperTypes().add(this.getOperation());
    operateurBinaireEClass.getESuperTypes().add(this.getOperation());
    colonneInputEClass.getESuperTypes().add(this.getColonne());
    colonneOutputEClass.getESuperTypes().add(this.getColonne());
    operationScriptEClass.getESuperTypes().add(this.getOperand());
    operationUnaireScriptEClass.getESuperTypes().add(this.getOperationScript());
    operationBinaireScriptEClass.getESuperTypes().add(this.getOperationScript());

    // Initialize classes and features; add operations and parameters
    initEClass(tableurEClass, Tableur.class, "Tableur", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getTableur_Name(), ecorePackage.getEString(), "name", null, 0, 1, Tableur.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getTableur_Tables(), this.getTable(), null, "tables", null, 0, -1, Tableur.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getTableur_Catalogue(), this.getCatalogue(), null, "catalogue", null, 0, -1, Tableur.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getTableur_Script(), this.getScript(), null, "script", null, 0, -1, Tableur.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(colonneEClass, Colonne.class, "Colonne", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getColonne_Name(), ecorePackage.getEString(), "name", null, 0, 1, Colonne.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(operationEClass, Operation.class, "Operation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(operateurUnaireEClass, OperateurUnaire.class, "OperateurUnaire", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getOperateurUnaire_Kind(), this.getOperationUnaireType(), "kind", null, 0, 1, OperateurUnaire.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(operateurBinaireEClass, OperateurBinaire.class, "OperateurBinaire", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getOperateurBinaire_Kind(), this.getOperationBinaireType(), "kind", null, 0, 1, OperateurBinaire.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(tableEClass, Table.class, "Table", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getTable_Name(), ecorePackage.getEString(), "name", null, 0, 1, Table.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getTable_Colonnes(), this.getColonne(), null, "colonnes", null, 0, -1, Table.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(colonneInputEClass, ColonneInput.class, "ColonneInput", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(colonneOutputEClass, ColonneOutput.class, "ColonneOutput", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getColonneOutput_Operations(), this.getOperation(), null, "operations", null, 0, -1, ColonneOutput.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getColonneOutput_Colonnes(), this.getColonne(), null, "colonnes", null, 0, -1, ColonneOutput.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(catalogueEClass, Catalogue.class, "Catalogue", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getCatalogue_Name(), ecorePackage.getEString(), "name", null, 0, 1, Catalogue.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getCatalogue_Algorithmes(), this.getAlgorithme(), null, "algorithmes", null, 0, -1, Catalogue.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(algorithmeEClass, Algorithme.class, "Algorithme", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getAlgorithme_Name(), ecorePackage.getEString(), "name", null, 0, 1, Algorithme.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getAlgorithme_Entrees(), this.getEntree(), null, "entrees", null, 0, -1, Algorithme.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getAlgorithme_Sorties(), this.getSortie(), null, "sorties", null, 0, -1, Algorithme.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getAlgorithme_Documentation(), this.getDocumentation(), null, "documentation", null, 0, -1, Algorithme.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getAlgorithme_Ressource(), this.getRessource(), null, "ressource", null, 0, -1, Algorithme.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(entreeEClass, Entree.class, "Entree", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getEntree_Parametres(), this.getParametre(), null, "parametres", null, 0, -1, Entree.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(sortieEClass, Sortie.class, "Sortie", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getSortie_Parametres(), this.getParametre(), null, "parametres", null, 0, -1, Sortie.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(parametreEClass, Parametre.class, "Parametre", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getParametre_Name(), ecorePackage.getEString(), "name", null, 0, 1, Parametre.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getParametre_Type(), this.getTypePrimitifPython(), "type", null, 0, 1, Parametre.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(documentationEClass, Documentation.class, "Documentation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getDocumentation_Texte(), ecorePackage.getEString(), "texte", null, 0, 1, Documentation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(ressourceEClass, Ressource.class, "Ressource", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getRessource_Chemin(), ecorePackage.getEString(), "chemin", null, 0, 1, Ressource.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(scriptEClass, Script.class, "Script", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getScript_Name(), ecorePackage.getEString(), "name", null, 0, 1, Script.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getScript_Entrees(), this.getEntreeScript(), null, "entrees", null, 0, -1, Script.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getScript_Sorties(), this.getSortieScript(), null, "sorties", null, 0, -1, Script.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getScript_Calculs(), this.getCalcul(), null, "calculs", null, 0, -1, Script.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(entreeScriptEClass, EntreeScript.class, "EntreeScript", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getEntreeScript_Parametres(), this.getParametre(), null, "parametres", null, 0, -1, EntreeScript.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(sortieScriptEClass, SortieScript.class, "SortieScript", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getSortieScript_Parametres(), this.getParametre(), null, "parametres", null, 0, -1, SortieScript.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(operationScriptEClass, OperationScript.class, "OperationScript", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(operationUnaireScriptEClass, OperationUnaireScript.class, "OperationUnaireScript", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getOperationUnaireScript_Operation(), this.getOperateurUnaireType(), "operation", null, 0, 1, OperationUnaireScript.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getOperationUnaireScript_Operands(), this.getOperand(), null, "operands", null, 0, -1, OperationUnaireScript.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(operationBinaireScriptEClass, OperationBinaireScript.class, "OperationBinaireScript", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getOperationBinaireScript_Operation(), this.getOperateurBinaireType(), "operation", null, 0, 1, OperationBinaireScript.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getOperationBinaireScript_Operand(), this.getOperand(), null, "operand", null, 0, -1, OperationBinaireScript.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(operandEClass, Operand.class, "Operand", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(calculEClass, Calcul.class, "Calcul", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getCalcul_Operation(), this.getOperationScript(), null, "Operation", null, 0, -1, Calcul.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Initialize enums and add enum literals
    initEEnum(operationUnaireTypeEEnum, OperationUnaireType.class, "OperationUnaireType");
    addEEnumLiteral(operationUnaireTypeEEnum, OperationUnaireType.OPPOSE);

    initEEnum(operationBinaireTypeEEnum, OperationBinaireType.class, "OperationBinaireType");
    addEEnumLiteral(operationBinaireTypeEEnum, OperationBinaireType.ADDITION);
    addEEnumLiteral(operationBinaireTypeEEnum, OperationBinaireType.SOUSTRACTION);
    addEEnumLiteral(operationBinaireTypeEEnum, OperationBinaireType.MULTIPLICATION);
    addEEnumLiteral(operationBinaireTypeEEnum, OperationBinaireType.DIVISION);

    initEEnum(typePrimitifPythonEEnum, TypePrimitifPython.class, "TypePrimitifPython");
    addEEnumLiteral(typePrimitifPythonEEnum, TypePrimitifPython.INT);
    addEEnumLiteral(typePrimitifPythonEEnum, TypePrimitifPython.FLOAT);
    addEEnumLiteral(typePrimitifPythonEEnum, TypePrimitifPython.STR);
    addEEnumLiteral(typePrimitifPythonEEnum, TypePrimitifPython.BOOL);
    addEEnumLiteral(typePrimitifPythonEEnum, TypePrimitifPython.LIST);

    initEEnum(operateurBinaireTypeEEnum, OperateurBinaireType.class, "OperateurBinaireType");
    addEEnumLiteral(operateurBinaireTypeEEnum, OperateurBinaireType.ADD);
    addEEnumLiteral(operateurBinaireTypeEEnum, OperateurBinaireType.SUB);
    addEEnumLiteral(operateurBinaireTypeEEnum, OperateurBinaireType.TIM);
    addEEnumLiteral(operateurBinaireTypeEEnum, OperateurBinaireType.DIV);
    addEEnumLiteral(operateurBinaireTypeEEnum, OperateurBinaireType.MIN);
    addEEnumLiteral(operateurBinaireTypeEEnum, OperateurBinaireType.MAX);

    initEEnum(operateurUnaireTypeEEnum, OperateurUnaireType.class, "OperateurUnaireType");
    addEEnumLiteral(operateurUnaireTypeEEnum, OperateurUnaireType.OPP);
    addEEnumLiteral(operateurUnaireTypeEEnum, OperateurUnaireType.INV);
    addEEnumLiteral(operateurUnaireTypeEEnum, OperateurUnaireType.COS);
    addEEnumLiteral(operateurUnaireTypeEEnum, OperateurUnaireType.SIN);
    addEEnumLiteral(operateurUnaireTypeEEnum, OperateurUnaireType.SQR);
    addEEnumLiteral(operateurUnaireTypeEEnum, OperateurUnaireType.EXP);
    addEEnumLiteral(operateurUnaireTypeEEnum, OperateurUnaireType.LOG);

    // Create resource
    createResource(eNS_URI);
  }

} //TABPackageImpl
