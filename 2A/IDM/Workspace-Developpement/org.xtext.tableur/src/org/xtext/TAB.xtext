grammar org.xtext.TAB with org.eclipse.xtext.common.Terminals

generate tAB "http://www.xtext.org/TAB"

/////////////////////////// RACINE ///////////////////////////

Tableur : 'Tableur' name=ID '{'
	tables+=Table*
	catalogue+=Catalogue*
	script+=Script*
	'}'
	;
	
/////////////////////////// TABLES ///////////////////////////
	
Colonne : ColonneInput | ColonneOutput;

Operation : OperateurUnaire | OperateurBinaire;

OperateurUnaire : 'Operation' kind=OperationUnaireType;

OperateurBinaire : 'Operation' kind=OperationBinaireType;

enum OperationUnaireType :
	Oppose='Oppose'
	;
	
enum OperationBinaireType :
	Addition='Addition'
	|Soustraction='Soustraction'
	|Multiplication='Multiplication'
	|Division='Division'
;

Table : 'Table' name=ID '{'
	colonnes+=Colonne* 
		'}'
		;

ColonneInput : 'ColonneInput' name=ID;

ColonneOutput : 'ColonneOutput' name=ID '{'
	operations+=OperateurBinaire colonnes+=[Colonne] colonnes+=[Colonne]
	'}'
	| 'ColonneOutput' name=ID '{'
	operations+=OperateurUnaire colonnes+=[Colonne]
	'}'
	;

/////////////////////////// CATALOGUE ///////////////////////////

Catalogue : 'Catalogue' name=ID '{'
	algorithmes+=Algorithme*
	'}';

Algorithme : 'Algorithme' name=ID '{'
	entrees+=Entree*
	sorties+=Sortie*
	documentation+=Documentation*
	ressource+=Ressource*
	'}'
;


Entree : 'Entrees' '{' 
	parametres+=Parametre*
	'}';

Sortie : 'Sorties' '{' 
	parametres+=Parametre*
	'}';

Parametre : name=ID ':' type=TypePrimitifPython;

// Ã  remplir/modif
enum TypePrimitifPython :
	 int
	|float
	|str
	|bool
	|list
;


Documentation : 'Documentation' texte=STRING;

Ressource : 'Ressource' chemin=STRING;


/////////////////////////// SCRIPT  ///////////////////////////

Script : 'Script' name=ID '{'
	entrees+=EntreeScript
	sorties+=SortieScript
	calculs+=Calcul
	'}'
	;
	
EntreeScript : 'Entrees' '{'
		parametres+=Parametre*
	'}'
	;
	
SortieScript : 'Sorties' '{'
		parametres+=Parametre*
	'}'
	;
	
enum OperateurBinaireType :
	 ADD = "Add"
	|SUB = "Sub"
	|TIM = "Tim"
	|DIV = "Div"
	|MIN = "Min"
	|MAX = "Max"
;
enum OperateurUnaireType :
	 OPP = "Opp"
	|INV = "Inv"
	|COS = "Cos"
	|SIN = "Sin"
	|SQR = "Sqr"
	|EXP = "Exp"
	|LOG = "Log"
;

OperationScript : OperationUnaireScript | OperationBinaireScript;

OperationUnaireScript : operation=OperateurUnaireType '('operands+=Operand')';

OperationBinaireScript : operation=OperateurBinaireType '('operand+=Operand','operand+=Operand')';

Operand : {Operand} ID | {Operand} INT | OperationScript;

Calcul : 'Calcul' '{'
	Operation+=OperationScript
	'}'
;


